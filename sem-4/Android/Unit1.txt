1.  Explain the key features of the Android platform. Discuss its architecture and how it
supports app development.

   Feature of Andorid platform
     1. OpenSource 
        - free and opensource
     2. Operating system
        - Linux kernel-Based operating system.
     3. Multitasking -
        - Support Multi-tasking , run more apps at once.
     4. Google Services
        - Support various build-in goodle services.
     5. Customizable UI
        - Offer flexible user interface.
     6. App Store Access.
        - Provide App store to publish the app for developer

 Android Architecture
    - Android architecture is organized into five main layers, 
    1. Linux Kernal 
       1. It is also know as Bottom layer
       2. It act as abstraction layer between hardware and software.
       3. It manage core function like process, memory management etc 
    
    2. HAL  
       1. HAL stand for Hardware Abstraction Layer 
       2. Provide Interface to Hardware components.
          eg camera, microphone etc
    
    3. ART 
       1. It ART stand for Android Runtime.
       2. Run the apps with better performance 
    
    4. Native Libraries
       1. Store the reusable package code like database management sqlite etc.
    
    5. Application 
       1. It is also known as Top Layer
       2. IT include the build-in apps like contants, sms, browser etc 
          along with user intalled apps.
    

supports app development.
    1. Andorid Studio 
      - IDE for developing Android apps
    2. SDK
      - Include API's Libraries and debuging tools
    3. Programming Languages 
      - Java, Kotlin, C, C++ support android development 
#########################################################################################################
2.  What is Android Studio? Describe its main components and how it simplifies Android
app development. (8 marks)

    Main Component of Andorid Studio
    1. Code Editor
        - Support Java, Kotlin, XML and more programming lanaguage.
        - Support Syntax Highlighting, code compilations etc
    2. Layout Editor
        - Allow you to design UI with drag and drop tool.
    3. Android Emulator
        - Simulates android devices for testing apps, without needing a physical device.
    4. Project structure 
        - Organizes files into modules eg app, libraries.
    5. Graddle Build system
        - Automates build processes like compiling, packaging, and testing.
    6. Device File Explorer 
        - Lets you browse files on connected/emulated devices.
#############################################################################################################
3.  Compare Android Studio with other IDEs for Android development. What advantages
does Android Studio offer

   1. Along with Android there are diffrent IDE in market 
     1. Visual stuidio
     2. Eclipse etc

    Cut compare to other Android has this advantage and feature
    1. Build by Google 
       - Android stuido is build by google team.
    2. Official IDE 
       - Fully supporeted by google with continous updates and feature.

    3. Rich Android-Specific Features:
       -  Layout Editor : Support easy ui design
       -  AVD Manager : Support easy testing on virtual devices.
    
    4. Seemless Google Service  support
       - support google services like Android SDK, Firebase, Google Play, and other Google services.
    
    5. Performance Optimization 
       -  Optimized Android app performance 
          and debugging tools like Logcat and Profiler.
    6. Testing Tools:
       - Has build in testing tool like Emulator for realtime app testing.
    7. Strong Community Support 
       - Has active and large Community support.

###################################################################################################################
5.  Explain the steps to set up the Android development environment on a Windows system.
Include details about installing Android Studio, SDK, and configuring the necessary
tools. (8 marks)

Steps to Setting up Android evelopment on Windows
1. Install Android Studio.
    - Download from official Webiste
    - Run the installer and follow the setup instruction. 

2. Indtall SDK
    - Open Android Studio > Tools > SDK Manager 
    - Install latest SDK and tools
3. Setup AVD
    -Go to tools > AVD Manager > create new virtual device, and choose system image 
4. Install JDK
    - Install the Java Development Kit (JDK), then set the path in File

5. Test Your Setup 
   - Create a new project and run it on the emulator 

#################################################################################################################
6.  What is the purpose of the Android SDK Manager? How does it help in managing SDK
versions and tools? 
   Purpose: 
      Manages Android SDK components needed for app development.
   Key Funtions -
      1. SDK Version Control
          - Install/Manage various Android versions
      2. Component Management 
          - Install only necessary tools and save space.
      3. Offline Support 
         - Can be used without internet
      4. Dependencies Handing 
         - Ensure tools and SDK compatiblity.
#################################################################################################################
7.  Describe the role of the Gradle build system in Android development. How does it help
in managing dependencies and building apps? (8 marks)

   1. Build Automation
      - Gradle Automate entire Build process.
      - compile code >> packing APK >> run tests etc

   2. Dependency Management 
      - Easily adds external libraries using Maven 
      - Automatically download and update dependencies.
   
   3. Build Varient 
      - Support different build types
   
   4. Support Custom Build Logic
      - Develper can write there custom build Logic
   
   5. Optimal Build
      - Build only change part in the code, and boost building speed.

   6. Integrations
      - Work Seamlessly with Andorid Studio and CICD pipeline

##############################################################################################################
10.  Explain the steps to create a new Android project in Android Studio using Kotlin. Include
details about selecting templates, configuring project settings, and understanding the
project structure. (8 marks)

1.  Open Android Studio
   - Launch Android Studio and click “New Project”.
2. Select Project template
   - Choose project template based on your needed
3. Configure Project setting
   - Fill out the following
     1. Name  - Name of your App
     2. Package Name - Unique ID
     3. Save Location - Project folder on your computer
     4. Language - Select programming lanaguage  eg Kotlin 
     5. SDK - Choose the SDK
4. Finish and Create Project:
    - Click Finish. Android Studio sets up your project.

###################################################################################################
11.  What is the purpose of the MainActivity.kt file in an Android project? Write a simple
Kotlin program to display "Hello, Android!" on the screen. (8 marks)

MainActivity.kt
   1. The MainActivity.kt file in the main screen of the Android App
   2. It setup the UI and handle logic what happen when app start.
   3. It handle user interaction like button click etc.


 Kotlin program to display "Hello, Android!"
 Example -

      import android.os.Bundle
      import android.widget.TextView
      import androidx.appcompat.app.AppCompatActivity

      class MainActivity : AppCompatActivity() {
         override fun onCreate(savedInstanceState: Bundle?) {
            super.onCreate(savedInstanceState)
            setContentView(TextView(this).apply {
                  text = "Hello, Android!"
                  textSize = 24f
            })
         }
      }



#####################################################################################################
12.  Discuss the importance of the activity_main.xml file in an Android project. How does it
interact with the Kotlin code?

1. The activity_main.xml file define the layout of the main screen in Android App.
2. It tells the app how the user interface look like including the button, text, images etc.

Interact with Kotlin
   1. Kotlin code eg MainActivity.kt uses setcontentView to load this layout.
   2. UI elements in the XML can be accessed and controlled in Kotlin using their IDs


 Example -

      import android.os.Bundle
      import android.widget.TextView
      import androidx.appcompat.app.AppCompatActivity

      class MainActivity : AppCompatActivity() {
         override fun onCreate(savedInstanceState: Bundle?) {
            super.onCreate(savedInstanceState)
            setContentView(TextView(this).apply {
                  text = "Hello, Android!"
                  textSize = 24f
            })
         }
      }

###########################################################################################################
13.  Explain the steps to deploy an Android application on a real device. Include details about
enabling USB debugging and configuring the device for development.
 
 1. Enable Developer Option 
    - GO to settings > about phone > turn on developer options
 2. Enable USB Debugging
    - Go to Settings > Developer Option > Turn on USB debugging.
 3. Connect Device via USB
    - Connect the phone with your computer using USB cable.
 4. Select the device in Andorid Studio
    - Open the your project on Andorid Studio
    - click on device drop down and select your phone.
 5. Run App.
    Click on Run App >
    The app install and launch in your real device.

###############################################################################################################
14.  What is an Android Virtual Device (AVD)? How do you create and configure an AVD in
Android Studio?
   1. An AVD is an emulator that simulate an Andorid Device on your computer.
   2. It let you to test apps without a physical phone.

   Create and Configuration
     1. Open Android Studio
     2. Go to tools > Device Manager
     3. Click on create Device 
     4. Choose Device model 
     5. Select system image eg Andorid 12
     6. Configure AVD settings (name, orientation etc)
     7. Click Finish , and AWD created.
     8. Click on Play button to Lauch 

#######################################################################################################################
15.  Compare the advantages and disadvantages of testing apps on real devices versus
emulators.

Real Devices
   1. It is costly
   2. It has high Acurracy
   3. Performance Testing is Accurate
   4. Can test real hardware
   5. Real world network testing eg (3G, 4G, Wifi)
   6. Accurate Touch/Gestures testing
   7. Device may not availabe for testing
   8. Hard to debugging
   9. take more time to setup
   10 testing speed is slower 
   11. No hardware limitations

Emulators
   1. It is free and (no need to buy physical device)
   2. It has low Accuracy.
   3. Performance Testing is Inaccurate.
   4. Limited and Simulated Hardware testing
   5. Simulated Network testing
   6. Limited Touch/Gestures testing.
   7. Device availabe everytime on the computer
   8. Easy in debugging
   9. Easy and quick setup
   10 testing speed is higher
   11. Hardware limitations